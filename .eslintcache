[{"E:\\GitHub\\Diary App\\src\\index.tsx":"1","E:\\GitHub\\Diary App\\src\\reportWebVitals.ts":"2","E:\\GitHub\\Diary App\\src\\store.ts":"3","E:\\GitHub\\Diary App\\src\\services\\mirage\\server.ts":"4","E:\\GitHub\\Diary App\\src\\rootReducer.ts":"5","E:\\GitHub\\Diary App\\src\\services\\mirage\\routes\\user.ts":"6","E:\\GitHub\\Diary App\\src\\services\\mirage\\routes\\diary.ts":"7","E:\\GitHub\\Diary App\\src\\features\\auth\\userSlice.ts":"8","E:\\GitHub\\Diary App\\src\\features\\auth\\authSlice.ts":"9","E:\\GitHub\\Diary App\\src\\features\\entry\\entriesSlice.ts":"10","E:\\GitHub\\Diary App\\src\\features\\diary\\diariesSlice.ts":"11","E:\\GitHub\\Diary App\\src\\features\\entry\\editorSlice.ts":"12","E:\\GitHub\\Diary App\\src\\app\\App.tsx":"13","E:\\GitHub\\Diary App\\src\\features\\auth\\Auth.tsx":"14","E:\\GitHub\\Diary App\\src\\features\\home\\Home.tsx":"15","E:\\GitHub\\Diary App\\src\\services\\api.ts":"16","E:\\GitHub\\Diary App\\src\\features\\diary\\Diaries.tsx":"17","E:\\GitHub\\Diary App\\src\\features\\entry\\Editor.tsx":"18","E:\\GitHub\\Diary App\\src\\util.ts":"19","E:\\GitHub\\Diary App\\src\\features\\diary\\DiaryTile.tsx":"20","E:\\GitHub\\Diary App\\src\\features\\diary\\DiaryEntriesList.tsx":"21"},{"size":530,"mtime":1608800931715,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1606749554166,"results":"24","hashOfConfig":"23"},{"size":335,"mtime":1608742823396,"results":"25","hashOfConfig":"23"},{"size":898,"mtime":1608810294317,"results":"26","hashOfConfig":"23"},{"size":602,"mtime":1608742678611,"results":"27","hashOfConfig":"23"},{"size":1275,"mtime":1608738087232,"results":"28","hashOfConfig":"23"},{"size":3099,"mtime":1608738431901,"results":"29","hashOfConfig":"23"},{"size":435,"mtime":1608742362117,"results":"30","hashOfConfig":"23"},{"size":661,"mtime":1608808816760,"results":"31","hashOfConfig":"23"},{"size":699,"mtime":1608742519996,"results":"32","hashOfConfig":"23"},{"size":832,"mtime":1608742419063,"results":"33","hashOfConfig":"23"},{"size":944,"mtime":1608742615306,"results":"34","hashOfConfig":"23"},{"size":706,"mtime":1608801021535,"results":"35","hashOfConfig":"23"},{"size":3114,"mtime":1608809594962,"results":"36","hashOfConfig":"23"},{"size":365,"mtime":1608801643559,"results":"37","hashOfConfig":"23"},{"size":962,"mtime":1608810600186,"results":"38","hashOfConfig":"23"},{"size":2938,"mtime":1608801920861,"results":"39","hashOfConfig":"23"},{"size":3906,"mtime":1608801304601,"results":"40","hashOfConfig":"23"},{"size":569,"mtime":1608740868844,"results":"41","hashOfConfig":"23"},{"size":2476,"mtime":1608801370764,"results":"42","hashOfConfig":"23"},{"size":1660,"mtime":1608801670298,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"2qkbqd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\GitHub\\Diary App\\src\\index.tsx",[],["89","90"],"E:\\GitHub\\Diary App\\src\\reportWebVitals.ts",[],"E:\\GitHub\\Diary App\\src\\store.ts",[],"E:\\GitHub\\Diary App\\src\\services\\mirage\\server.ts",[],"E:\\GitHub\\Diary App\\src\\rootReducer.ts",[],"E:\\GitHub\\Diary App\\src\\services\\mirage\\routes\\user.ts",["91"],"import { Response, Request } from 'miragejs';\r\nimport { handleErrors } from '../server';\r\nimport { User } from '../../../interfaces/user.interface';\r\nimport { randomBytes } from 'crypto';\r\n\r\nconst generateToken = () => randomBytes(8).toString('hex');\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n  const { username, password } = JSON.parse(req.requestBody);\r\n  const user = schema.users.findBy({ username });\r\n  if (!user) {\r\n    return handleErrors(null, 'No user with that username exists');\r\n  }\r\n  if (password !== user.password) {\r\n    return handleErrors(null, 'Password is incorrect');\r\n  }\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\nconst signup = (schema: any, req: Request): AuthResponse | Response => {\r\n  const data = JSON.parse(req.requestBody);\r\n  const exUser = schema.users.findBy({ username: data.username });\r\n  if (exUser) {\r\n    return handleErrors(null, 'A user with that username already exists.');\r\n  }\r\n  const user = schema.users.create(data);\r\n  const token = generateToken();\r\n  return {\r\n    user: user.attrs as User,\r\n    token,\r\n  };\r\n};\r\n\r\nexport default {\r\n  login,\r\n  signup,\r\n};\r\n","E:\\GitHub\\Diary App\\src\\services\\mirage\\routes\\diary.ts",[],"E:\\GitHub\\Diary App\\src\\features\\auth\\userSlice.ts",[],"E:\\GitHub\\Diary App\\src\\features\\auth\\authSlice.ts",[],"E:\\GitHub\\Diary App\\src\\features\\entry\\entriesSlice.ts",[],"E:\\GitHub\\Diary App\\src\\features\\diary\\diariesSlice.ts",[],"E:\\GitHub\\Diary App\\src\\features\\entry\\editorSlice.ts",[],"E:\\GitHub\\Diary App\\src\\app\\App.tsx",[],"E:\\GitHub\\Diary App\\src\\features\\auth\\Auth.tsx",["92"],"import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { User } from '../../interfaces/user.interface';\r\nimport * as Yup from 'yup';\r\nimport http from '../../services/api';\r\nimport { saveToken, setAuthState } from './authSlice';\r\nimport { setUser } from './userSlice';\r\nimport { AuthResponse } from '../../services/mirage/routes/user';\r\nimport { useAppDispatch } from '../../store';\r\n\r\nconst schema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required('What? No username?')\r\n    .max(16, 'Username cannot be longer than 16 characters'),\r\n  password: Yup.string().required('Without a password, \"None shall pass!\"'),\r\n  email: Yup.string().email('Please provide a valid email address (abc@xy.z)'),\r\n});\r\n\r\nconst Auth: FC = () => {\r\n  const { handleSubmit, register, errors } = useForm<User>();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const submitForm = (data: User) => {\r\n    const path = isLogin ? '/auth/login' : '/auth/signup';\r\n    http\r\n      .post<User, AuthResponse>(path, data)\r\n      .then((res) => {\r\n        if (res) {\r\n          const { user, token } = res;\r\n          dispatch(saveToken(token));\r\n          dispatch(setUser(user));\r\n          dispatch(setAuthState(true));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"card\">\r\n        <form onSubmit={handleSubmit(submitForm)}>\r\n          <div className=\"inputWrapper\">\r\n            <input ref={register} name=\"username\" placeholder=\"Username\" />\r\n            {errors && errors.username && (\r\n              <p className=\"error\">{errors.username.message}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"inputWrapper\">\r\n            <input\r\n              ref={register}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            {errors && errors.password && (\r\n              <p className=\"error\">{errors.password.message}</p>\r\n            )}\r\n          </div>\r\n          {!isLogin && (\r\n            <div className=\"inputWrapper\">\r\n              <input\r\n                ref={register}\r\n                name=\"email\"\r\n                placeholder=\"Email (optional)\"\r\n              />\r\n              {errors && errors.email && (\r\n                <p className=\"error\">{errors.email.message}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"inputWrapper\">\r\n            <button type=\"submit\" disabled={loading}>\r\n              {isLogin ? 'Login' : 'Create account'}\r\n            </button>\r\n          </div>\r\n          <p\r\n            onClick={() => setIsLogin(!isLogin)}\r\n            style={{ cursor: 'pointer', opacity: 0.7 }}\r\n          >\r\n            {isLogin ? 'No account? Create one' : 'Already have an account?'}\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","E:\\GitHub\\Diary App\\src\\features\\home\\Home.tsx",[],"E:\\GitHub\\Diary App\\src\\services\\api.ts",[],"E:\\GitHub\\Diary App\\src\\features\\diary\\Diaries.tsx",[],"E:\\GitHub\\Diary App\\src\\features\\entry\\Editor.tsx",[],"E:\\GitHub\\Diary App\\src\\util.ts",[],"E:\\GitHub\\Diary App\\src\\features\\diary\\DiaryTile.tsx",[],"E:\\GitHub\\Diary App\\src\\features\\diary\\DiaryEntriesList.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":43,"column":1,"nodeType":"99","endLine":46,"endColumn":3},{"ruleId":"100","severity":1,"message":"101","line":11,"column":7,"nodeType":"102","messageId":"103","endLine":11,"endColumn":13},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'schema' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]